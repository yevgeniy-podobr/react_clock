{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","intervalID","setInterval","tick","prevProps","name","props","console","log","clearInterval","setState","React","Component","App","isClockVisible","clockName","showClock","hideClock","changeName","Math","ceil","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA4CeA,E,4MAxCbC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sB,uDAGnB,WAAqB,IAAD,OAClBC,KAAKC,WAAaC,aAAY,WAC5B,EAAKC,SACJ,O,gCAGL,SAAmBC,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,+CAC+BJ,EAAUC,KADzC,eACoDL,KAAKM,MAAMD,KAD/D,aAKFE,QAAQC,IAAIR,KAAKJ,MAAMC,Q,kCAGzB,WACEY,cAAcT,KAAKC,c,kBAGrB,WACED,KAAKU,SAAS,CACZb,MAAM,IAAIC,MAAOC,yB,oBAIrB,WACE,OAAO,oCAAGC,KAAKJ,MAAMC,U,GAjCLc,IAAMC,WC2DXC,G,kNAxDbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKN,SAAS,CAAEI,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKP,SAAS,CAAEI,gBAAgB,K,EAGlCI,WAAa,WACX,EAAKR,SAAS,CAAEK,UAAWI,KAAKC,KAAqB,IAAhBD,KAAKE,a,4CAG5C,WACE,MAAsCrB,KAAKJ,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACA,2CAGGR,GAAkB,kBAAC,EAAD,CAAOT,KAAMU,KAElC,yCAGGA,GAEH,4BACEQ,KAAK,SACLC,QAASxB,KAAKgB,WAFhB,cAMA,4BACEO,KAAK,SACLC,QAASxB,KAAKiB,WAFhB,cAMA,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,YAFhB,wB,GA9CUP,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.506f69e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`\n        The Clock war renamed from ${prevProps.name} to ${this.props.name}\n      `);\n    }\n    // eslint-disable-next-line\n    console.log(this.state.time);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick() {\n    this.setState({\n      time: new Date().toLocaleTimeString(),\n    });\n  }\n\n  render() {\n    return <>{this.state.time}</>;\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 1,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  changeName = () => {\n    this.setState({ clockName: Math.ceil(Math.random() * 100) });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n\n          {isClockVisible && <Clock name={clockName} /> }\n        </p>\n        <p>\n          Clock Name:\n\n          {clockName}\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}